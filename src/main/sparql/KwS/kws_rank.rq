prefix : <urn:vocab:kws:>
prefix kws: <urn:vocab:kws:>
prefix kwsg: <urn:graph:kws:>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix text: <http://jena.apache.org/text#>



#####################################################
# selecionar os grupos de entidades mais relevantes #
#####################################################

with kwsg:sol1
insert {
  ?bag a rdf:Bag;
    kws:score ?score;
    kws:size ?size;
    rdfs:member ?m;
    .
  ?m kws:comment ?comment.
}
using kwsg:temp3
using named kwsg:temp
where {
  {
    select ?bag (coalesce(?_score,0) as ?score) ?size
    where {
        ?bag a rdf:Bag.
        ?bag kws:size ?size
        optional {(?bag ?_score) text:query '%1$s'}.
    }
    order by desc(coalesce(?_score,0)) ?size
    limit 50
  }
  ?bag rdfs:member ?m.
};



##############################################
# Buscar caminhos entre entidades dos grupos #
##############################################

with kwsg:temp4
insert {[] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e2.}
using kwsg:sol1
where {
select distinct ?e1 ?e2
    where {
      [] a rdf:Bag; rdfs:member ?e1; rdfs:member ?e2.
      filter (str(?e2)>str(?e1))
    }
};


# distancia 1
with kwsg:sol1
insert {?e1 ?p1 ?e2.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e2.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e2}})
  }
  graph kwsg:temp {?e1 ?p1 ?e2. filter(?p1 not in (rdf:type,rdfs:member))}
};

with kwsg:sol1
insert {?e2 ?_p1 ?e1.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e2.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e2}})
  }
  graph kwsg:temp {?e2 ?_p1 ?e1. filter(?_p1 not in (rdf:type,rdfs:member))}
};


# distancia 2
with kwsg:sol1
insert {?e1 ?p1 ?e2. ?e2 ?p2 ?e3.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e3.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e3}})
  }
  graph kwsg:temp {
    ?e1 ?p1 ?e2. filter(isIRI(?e2) && ?e2 not in (?e1) && ?p1 not in (rdf:type,rdfs:member))
    ?e2 ?p2 ?e3. filter(?p2 not in (rdf:type,rdfs:member))
  }
};

with kwsg:sol1
insert {?e2 ?_p1 ?e1. ?e2 ?p2 ?e3.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e3.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e3}})
  }
  graph kwsg:temp {
    ?e2 ?_p1 ?e1. filter(isIRI(?e2) && ?e2 not in (?e1) && ?_p1 not in (rdf:type,rdfs:member))
    ?e2 ?p2 ?e3. filter(?p2 not in (rdf:type,rdfs:member))
  }
};

with kwsg:sol1
insert {?e1 ?p1 ?e2. ?e3 ?_p2 ?e2.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e3.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e3}})
  }
  graph kwsg:temp {
    ?e1 ?p1 ?e2. filter(isIRI(?e2) && ?e1 not in (?e1) && ?p1 not in (rdf:type,rdfs:member))
    ?e3 ?_p2 ?e2. filter(?_p2 not in (rdf:type,rdfs:member))
  }
};

with kwsg:sol1
insert {?e2 ?_p1 ?e1. ?e3 ?_p2 ?e2.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e3.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e3}})
  }
  graph kwsg:temp {
    ?e2 ?_p1 ?e1. filter(isIRI(?e2) && ?e2 not in (?e1) && ?_p1 not in (rdf:type,rdfs:member))
    ?e3 ?_p2 ?e2. filter(?_p2 not in (rdf:type,rdfs:member))
  }
};


# distancia 3
with kwsg:sol1
insert {?e1 ?p1 ?e2. ?e2 ?p2 ?e3. ?e3 ?p3 ?e4.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e4.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e4}})
  }
  graph kwsg:temp {
    ?e1 ?p1 ?e2. filter (isIRI(?e2) && ?e2 not in (?e1) && ?p1 not in (rdf:type,rdfs:member))
    ?e2 ?p2 ?e3. filter (isIRI(?e3) && ?e3 not in (?e1,?e2) && ?p2 not in (rdf:type,rdfs:member))
    ?e3 ?p3 ?e4. filter (?p3 not in (rdf:type,rdfs:member))
  }
};

with kwsg:sol1
insert {?e1 ?p1 ?e2. ?e2 ?p2 ?e3. ?e4 ?_p3 ?e3.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e4.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e4}})
  }
  graph kwsg:temp {
    ?e1 ?p1 ?e2. filter (isIRI(?e2) && ?e2 not in (?e1) && ?p1 not in (rdf:type,rdfs:member))
    ?e2 ?p2 ?e3. filter (isIRI(?e3) && ?e3 not in (?e1,?e2) && ?p2 not in (rdf:type,rdfs:member))
    ?e4 ?_p3 ?e3. filter (?_p3 not in (rdf:type,rdfs:member))
  }
};

with kwsg:sol1
insert {?e1 ?p1 ?e2. ?e3 ?_p2 ?e2. ?e3 ?p3 ?e4.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e4.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e4}})
  }
  graph kwsg:temp {
    ?e1 ?p1 ?e2. filter (isIRI(?e2) && ?e2 not in (?e1) && ?p1 not in (rdf:type,rdfs:member))
    ?e3 ?_p2 ?e2. filter (isIRI(?e3) && ?e3 not in (?e1,?e2) && ?_p2 not in (rdf:type,rdfs:member))
    ?e3 ?p3 ?e4. filter (?p3 not in (rdf:type,rdfs:member))
  }
};

with kwsg:sol1
insert {?e1 ?p1 ?e2. ?e3 ?_p2 ?e2. ?e4 ?_p3 ?e3.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e4.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e4}})
  }
  graph kwsg:temp {
    ?e1 ?p1 ?e2. filter (isIRI(?e2) && ?e2 not in (?e1) && ?p1 not in (rdf:type,rdfs:member))
    ?e3 ?_p2 ?e2. filter (isIRI(?e3) && ?e3 not in (?e1,?e2) && ?_p2 not in (rdf:type,rdfs:member))
    ?e4 ?_p3 ?e3. filter (?_p3 not in (rdf:type,rdfs:member))
  }
};

with kwsg:sol1
insert {?e2 ?_p1 ?e1. ?e2 ?p2 ?e3. ?e3 ?p3 ?e4.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e4.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e4}})
  }
  graph kwsg:temp {
    ?e2 ?_p1 ?e1. filter (isIRI(?e2) && ?e2 not in (?e1) && ?_p1 not in (rdf:type,rdfs:member))
    ?e2 ?p2 ?e3. filter (isIRI(?e3) && ?e3 not in (?e1,?e2) && ?p2 not in (rdf:type,rdfs:member))
    ?e3 ?p3 ?e4. filter (?p3 not in (rdf:type,rdfs:member))
  }
};

with kwsg:sol1
insert {?e2 ?_p1 ?e1. ?e2 ?p2 ?e3. ?e4 ?_p3 ?e3.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e4.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e4}})
  }
  graph kwsg:temp {
    ?e2 ?_p1 ?e1. filter (isIRI(?e2) && ?e2 not in (?e1) && ?_p1 not in (rdf:type,rdfs:member))
    ?e2 ?p2 ?e3. filter (isIRI(?e3) && ?e3 not in (?e1,?e2) && ?p2 not in (rdf:type,rdfs:member))
    ?e4 ?_p3 ?e3. filter (?_p3 not in (rdf:type,rdfs:member))
  }
};

with kwsg:sol1
insert {?e2 ?_p1 ?e1. ?e3 ?_p2 ?e2. ?e3 ?p3 ?e4.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e4.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e4}})
  }
  graph kwsg:temp {
    ?e2 ?_p1 ?e1. filter (isIRI(?e2) && ?e2 not in (?e1) && ?_p1 not in (rdf:type,rdfs:member))
    ?e3 ?_p2 ?e2. filter (isIRI(?e3) && ?e3 not in (?e1,?e2) && ?_p2 not in (rdf:type,rdfs:member))
    ?e3 ?p3 ?e4. filter (?p3 not in (rdf:type,rdfs:member))
  }
};

with kwsg:sol1
insert {?e2 ?_p1 ?e1. ?e3 ?_p2 ?e2. ?e4 ?_p3 ?e3.}
where {
    graph kwsg:temp4 {
        [] a rdf:Bag; rdf:_1 ?e1; rdf:_2 ?e4.
    filter (not exists {graph kwsg:sol1 {?e1 (!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size) | ^(!(rdf:type | rdfs:member | kws:comment | kws:score | kws:size)))+ ?e4}})
  }
  graph kwsg:temp {
    ?e2 ?_p1 ?e1. filter (isIRI(?e2) && ?e2 not in (?e1) && ?_p1 not in (rdf:type,rdfs:member))
    ?e3 ?_p2 ?e2. filter (isIRI(?e3) && ?e3 not in (?e1,?e2) && ?_p2 not in (rdf:type,rdfs:member))
    ?e4 ?_p3 ?e3. filter (?_p3 not in (rdf:type,rdfs:member))
  }
};

with kwsg:sol1
insert {
  ?s kws:comment ?comment.
}
using kwsg:sol1
using named kwsg:temp
where {
  ?s ?p [].
  graph kwsg:temp {?s kws:comment ?comment.}
};