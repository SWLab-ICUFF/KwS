prefix kws: <urn:vocab:kws:>
prefix kwsg: <urn:graph:kws:>
prefix meta: <http://www.semwebtech.org/mondial/10/meta#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix text: <http://jena.apache.org/text#>
prefix fn: <java:uff.ic.swlab.jena.sparql.function.>


###########################################################################################
# Criando um sub-conjunto de soluções Fórmula 7#
###########################################################################################

with kwsg:groups2
insert {?bag a rdf:Bag; ?p1 ?o1. ?o1 ?p2 ?o2.}
where {
    {
        select ?bag {
            graph kwsg:groups {?bag kws:csScore ?csScore; kws:isScore ?isScore; kws:osScore ?osScore.}
            filter (?csScore >= 0.7 && ?isScore >= 0.5 && ?osScore >= 0.5)
        }
    }
  graph kwsg:groups {?bag ?p1 ?o1. ?o1 ?p2 ?o2.}
};



####################################################
# gerar os pares de combinações entre as entidades #
####################################################

with kwsg:pairs
insert {[] a rdf:Seq; rdf:_1 ?e1; rdf:_2 ?e2; kws:solution ?bag.}
using kwsg:groups2
where {?bag a rdf:Bag; rdfs:member ?e1; rdfs:member ?e2. filter (str(?e2)>str(?e1))};