#STEP 3: FILTRE UM SUB-CONJUNTO DE SOLUÇÕES E GERAR PARES DE  COMBINAÇÃO DAS ENTIDADES FILTRADAS

prefix kws: <urn:vocab:kws:>
prefix kwsg: <urn:graph:kws:>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>


###########################################################################################
# Criando um sub-conjunto de soluções Fórmula 7#
###########################################################################################

WITH kwsg:groups2
INSERT {?bag a rdf:Bag; ?p1 ?o1. ?o1 ?p2 ?o2.}
WHERE {
    {
        SELECT ?bag {
            GRAPH kwsg:groups {?bag kws:csScore ?csScore; kws:isScore ?isScore; kws:osScore ?osScore; kws:ssScore ?ssScore}
            FILTER (?csScore >= 0.0 && ?isScore >= 0.0 && ?osScore >= 0.0 && ?ssScore >= 0.0)
        }
    }
  GRAPH kwsg:groups {?bag ?p1 ?o1. ?o1 ?p2 ?o2.}
};



####################################################
# gerar os pares de combinações entre as entidades #
####################################################

WITH kwsg:pairs
INSERT {[] a rdf:Seq; rdf:_1 ?e1; rdf:_2 ?e2; kws:solution ?bag.}
USING kwsg:groups2
WHERE {?bag a rdf:Bag; rdfs:member ?e1; rdfs:member ?e2. filter (str(?e2)>str(?e1))};